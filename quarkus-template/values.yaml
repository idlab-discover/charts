# yaml-language-server: $schema=values.schema.json

# @schema
# title: Global Settings
# type: object
# additionalProperties: true
# @schema
global:
  # @schema
  # type: string
  # @schema
  # -- Hostname for the ingress
  host: ""
  # @schema
  # title: Ingress Route Settings
  # type: object
  # @schema
  ingressRoutes:
    # @schema
    # type: boolean
    # @schema
    # -- Automatically create IngressRoute for the host
    matchHost: false
    # @schema
    # type: boolean
    # @schema
    # -- Enable TLS for the IngressRoute
    tlsEnabled: false
    # @schema
    # type: string
    # @schema
    # -- Proxy protocol for the IngressRoute
    proxy: "none"

  # @schema
  # title: Environment Variables
  # type: array
  # @schema
  # -- Global environment variables
  env: []

  # @schema
  # title: Application YAML
  # type: object
  # additionalProperties: true
  # @schema
  applicationYaml: {}

  # @schema
  # title: Image Settings
  # type: object
  # @schema
  image:
    # @schema
    # type: string
    # @schema
    # -- Image registry
    registry: "gitlab.ilabt.imec.be:4567/discover/packages"
    # @schema
    # type: string
    # @schema
    # -- Image tag
    tag: ""
    # @schema
    # type: string
    # @schema
    # -- Image pull policy
    pullPolicy: IfNotPresent

  # @schema
  # title: Image Pull Secrets
  # type: array
  # @schema
  # -- Global image pull secrets
  imagePullSecrets: []

  # @schema
  # title: Deployment Strategy
  # type: object
  # additionalProperties: true
  # @schema
  deploymentStrategy: {}
  # @schema
  # title: Liveness Probe
  # type: object
  # additionalProperties: true
  # @schema
  livenessProbe: {}
  # @schema
  # title: Readiness Probe
  # type: object
  # additionalProperties: true
  # @schema
  readinessProbe: {}

  # @schema
  # title: Quarkus Settings
  # type: object
  # @schema
  quarkus:
    # @schema
    # type: integer
    # @schema
    # -- Quarkus HTTP port
    httpPort: 8080
    # @schema
    # type: ["null", integer]
    # @schema
    # -- Quarkus metrics port
    metricsPort: null
    # @schema
    # title: Logging Settings
    # type: object
    # @schema
    logging:
      # @schema
      # type: string
      # @schema
      # -- Logging level
      level: INFO

  # @schema
  # title: Truststore Settings
  # type: object
  # @schema
  truststore: {}

  # @schema
  # title: OIDC Settings
  # type: object
  # additionalProperties: true
  # @schema
  oidc:
    # @schema
    # type: string
    # @schema
    # -- OIDC auth server URL
    authServerUrl: ""
    # @schema
    # type: string
    # @schema
    # -- OIDC client ID
    clientId: ""
    # @schema
    # type: string
    # @schema
    # -- OIDC client secret
    clientSecret: ""
    # @schema
    # type: string
    # @schema
    # -- OIDC realm
    realm: ""
    # @schema
    # type: string
    # @schema
    # -- Existing secret for OIDC
    existingSecret: ""
    # @schema
    # type: string
    # @schema
    # -- Key for client ID in existing secret
    clientIdSecretKey: "client-id"
    # @schema
    # type: string
    # @schema
    # -- Key for client secret in existing secret
    clientSecretSecretKey: "client-secret"
    # @schema
    # type: string
    # @schema
    # -- Key for realm in existing secret
    realmSecretKey: ""
    # @schema
    # title: Application YAML
    # type: object
    # additionalProperties: true
    # @schema
    applicationYaml: {}
  # @schema
  # title: Keycloak Admin Settings
  # type: object
  # @schema
  keycloakAdmin:
    # @schema
    # type: boolean
    # @schema
    # -- Enable Keycloak admin client
    enabled: false
    # @schema
    # type: string
    # @schema
    # -- Keycloak server URL
    serverUrl: ""
    # @schema
    # type: string
    # @schema
    # -- Keycloak admin username
    username: ""
    # @schema
    # type: string
    # @schema
    # -- Keycloak admin password
    password: ""
    # @schema
    # type: string
    # @schema
    # -- Keycloak realm
    realm: ""
    # @schema
    # type: string
    # @schema
    # -- Existing secret for Keycloak admin
    existingSecret: ""
    # @schema
    # type: string
    # @schema
    # -- Key for username in existing secret
    usernameSecretKey: ""
    # @schema
    # type: string
    # @schema
    # -- Key for password in existing secret
    passwordSecretKey: ""
  # @schema
  # title: OpenFGA Settings
  # type: object
  # @schema
  openfga:
    # @schema
    # type: boolean
    # @schema
    # -- Enable Openfga configuration
    enabled: false
    # @schema
    # type: string
    # @schema
    # -- OpenFGA API URL
    url: ""
    # @schema
    # type: string
    # @schema
    # -- OpenFGA store ID
    storeId: ""
    # @schema
    # type: string
    # @schema
    # -- Existing secret for OpenFGA
    existingSecret: ""
    # @schema
    # type: string
    # @schema
    # -- Key for store ID in existing secret
    storeIdSecretKey: ""
    # @schema
    # title: Application YAML
    # type: object
    # additionalProperties: true
    # @schema
    applicationYaml: {}
  # @schema
  # title: Minio Settings
  # type: object
  # @schema
  minio:
    # @schema
    # type: string
    # @schema
    # -- Minio host
    host: ""
    # @schema
    # type: ["null", integer]
    # @schema
    # -- Minio port
    port: null
    # @schema
    # type: boolean
    # @schema
    # -- Use secure connection to Minio
    secure: true
    # @schema
    # type: boolean
    # @schema
    # -- Skip TLS verification for Minio
    skipTlsVerify: true
    # @schema
    # type: boolean
    # @schema
    # -- Use TLS for Minio
    useTls: false
    # @schema
    # type: string
    # @schema
    # -- Minio access key
    accessKey: ""
    # @schema
    # type: string
    # @schema
    # -- Minio secret key
    secretKey: ""
    # @schema
    # type: string
    # @schema
    # -- Existing secret for Minio
    existingSecret: ""
    # @schema
    # type: string
    # @schema
    # -- Key for access key in existing secret
    accessKeySecretKey: ""
    # @schema
    # type: string
    # @schema
    # -- Key for secret key in existing secret
    secretKeySecretKey: ""
    # @schema
    # title: Application YAML
    # type: object
    # additionalProperties: true
    # @schema
    applicationYaml: {}
  # @schema
  # title: S3 Settings
  # type: object
  # additionalProperties: true
  # @schema
  s3:
    # @schema
    # type: string
    # @schema
    # -- S3 Endpoint URL (e.g. http://minio:9000)
    endpoint: ""
    # @schema
    # type: string
    # @schema
    # -- S3 Region
    region: "eu-west-1"
    # @schema
    # type: string
    # @schema
    # -- S3 access key
    accessKey: ""
    # @schema
    # type: string
    # @schema
    # -- S3 secret key
    secretKey: ""
    # @schema
    # type: string
    # @schema
    # -- Existing secret for S3 access
    existingSecret: ""
    # @schema
    # type: string
    # @schema
    # -- Key for access key in existing secret
    accessKeySecretKey: ""
    # @schema
    # type: string
    # @schema
    # -- Key for secret key in existing secret
    secretKeySecretKey: ""
    # @schema
    # title: Application YAML
    # type: object
    # additionalProperties: true
    # @schema
    applicationYaml: {}
  # @schema
  # title: Kafka Settings
  # type: object
  # additionalProperties: true
  # @schema
  kafka:
    # @schema
    # type: string
    # @schema
    # -- Kafka bootstrap servers
    bootstrapServers: ""
    # @schema
    # title: Application YAML
    # type: object
    # additionalProperties: true
    # @schema
    applicationYaml: {}
  # @schema
  # title: Clickhouse Settings
  # type: object
  # @schema
  clickhouse:
    # @schema
    # type: string
    # @schema
    # -- Clickhouse host
    host: ""
    # @schema
    # type: ["null", integer]
    # @schema
    # -- Clickhouse port
    port: null
    # @schema
    # title: Application YAML
    # type: object
    # additionalProperties: true
    # @schema
    applicationYaml: {}

# @schema
# title: enable the chart/template (used in subcharts)
# type: boolean
# @schema
enabled: true
# @schema
# title: OIDC Settings
# type: object
# additionalProperties: true
# @schema
oidc:
  # @schema
  # type: boolean
  # @schema
  # -- Enable OIDC support
  enabled: false
  # @schema
  # type: string
  # @schema
  # -- OIDC authentication server URL
  # authServerUrl: ""

# @schema
# title: Keycloak Admin Settings
# type: object
# additionalProperties: true
# @schema
keycloakAdmin:
  # @schema
  # type: boolean
  # @schema
  # -- Enable Keycloak Admin client
  enabled: false

# @schema
# title: S3 Settings
# type: object
# additionalProperties: true
# @schema
s3:
  # @schema
  # type: boolean
  # @schema
  # -- Enable AWS S3 client
  enabled: false

# @schema
# title: Minio Settings
# type: object
# additionalProperties: true
# @schema
minio:
  # @schema
  # type: boolean
  # @schema
  # -- Enable Minio client
  enabled: false

# @schema
# title: Kafka Settings
# type: object
# additionalProperties: true
# @schema
kafka:
  # @schema
  # type: boolean
  # @schema
  # -- Enable Kafka client
  enabled: false

# @schema
# title: Clickhouse Settings
# type: object
# additionalProperties: true
# @schema
clickhouse:
  # @schema
  # type: boolean
  # @schema
  # -- Enable Clickhouse client
  enabled: false

# @schema
# title: OpenFGA Settings
# type: object
# additionalProperties: true
# @schema
openfga:
  # @schema
  # type: boolean
  # @schema
  # -- Enable OpenFGA client
  enabled: false

# @schema
# title: Job Settings
# @schema
job:
  # @schema
  # type: boolean
  # @schema
  # -- Enable the job
  enabled: false
  # @schema
  # type: integer
  # @schema
  # -- Job backoff limit
  backoffLimit: 5
  # @schema
  # type: string
  # @schema
  # -- Job restart policy
  restartPolicy: "OnFailure"

# @schema
# type: integer
# @schema
# -- Number of replicas for the deployment.
replicaCount: 1

# @schema
# title: Image Settings
# @schema
image:
  # @schema
  # type: string
  # @schema
  # -- Name of the image. Defaults to the chart name.
  name: ""
  # @schema
  # type: string
  # @schema
  # -- Registry for the image. Overrides the global registry.
  registry: ""
  # @schema
  # type: string
  # @schema
  # -- Image pull policy.
  pullPolicy: ""
  # @schema
  # type: string
  # @schema
  # -- Tag for the image. Overrides the chart appVersion.
  tag: ""

# @schema
# title: Quarkus Settings
# @schema
quarkus:
  # @schema
  # type: integer
  # @schema
  # -- Quarkus HTTP port
  httpPort: 8080
  # @schema
  # type: ["null", integer]
  # @schema
  # -- Quarkus metrics port
  metricsPort: null

# @schema
# title: PodMonitor settings
# @schema
podMonitor:
  # @schema
  # type: boolean
  # @schema
  # -- Enable PodMonitor creation
  enabled: false
  # @schema
  # oneOf:
  #   - type: string
  #     pattern: s$
  #   - type: string
  #     pattern: m$
  # @schema
  # -- Scrape interval for PodMonitor
  interval: "15s"

# @schema
# type: string
# @schema
# -- Additional application.properties entries
applicationProperties: ""

# @schema
# type: object
# additionalProperties: true
# @schema
# -- Additional application.yaml entries
applicationYaml: {}

# @schema
# type: array
# @schema
# -- Secrets for pulling images from a private repository.
imagePullSecrets: []
# @schema
# type: string
# @schema
# -- Override the chart name.
nameOverride: ""
# @schema
# type: string
# @schema
# -- Override the full name of the chart.
fullnameOverride: ""

# @schema
# type: object
# @schema
# -- Annotations to add to the pod.
podAnnotations: {}
# @schema
# type: object
# @schema
# -- Labels to add to the pod.
podLabels: {}

# @schema
# type: object
# @schema
# -- Security context for the pod.
podSecurityContext: {}

# @schema
# type: object
# @schema
# -- Security context for the container.
securityContext: {}

# @schema
# title: Service Settings
# @schema
service:
  # @schema
  # type: string
  # @schema
  # -- Service type.
  type: ClusterIP
  # @schema
  # type: integer
  # @schema
  # -- Service port.
  port: 80

# @schema
# title: IngressRoute Settings
# @schema
ingressRoutes:
  # @schema
  # type: [boolean, null]
  # @schema
  # -- Match host for IngressRoute
  matchHost:
  # @schema
  # type: boolean
  # @schema
  # -- Enable IngressRoute
  enabled: false
  # @schema
  # type: boolean
  # @schema
  # -- Enable TLS for IngressRoute
  tlsEnabled: false
  # @schema
  # type: array
  # @schema
  # -- Routes for the IngressRoute
  routes: []

# @schema
# title: Ingress Settings
# @schema
ingress:
  # @schema
  # type: boolean
  # @schema
  # -- Enable Ingress
  enabled: false
  # @schema
  # type: string
  # @schema
  # -- Ingress class name
  className: ""
  # @schema
  # type: object
  # @schema
  # -- Annotations for the Ingress
  annotations: {}
  # @schema
  # type: array
  # @schema
  # -- Hosts for the Ingress
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  # @schema
  # type: array
  # @schema
  # -- TLS settings for the Ingress
  tls: []

# @schema
# type: object
# @schema
# -- Resource requests and limits.
resources: {}

# @schema
# type: object
# additionalProperties: true
# @schema
# -- Liveness probe configuration.
livenessProbe: {}
# @schema
# type: object
# additionalProperties: true
# @schema
# -- Readiness probe configuration.
readinessProbe: {}

# @schema
# title: Autoscaling Settings
# @schema
autoscaling:
  # @schema
  # type: boolean
  # @schema
  # -- Enable autoscaling
  enabled: false
  # @schema
  # type: integer
  # @schema
  # -- Minimum number of replicas
  minReplicas: 1
  # @schema
  # type: integer
  # @schema
  # -- Maximum number of replicas
  maxReplicas: 100
  # @schema
  # type: integer
  # @schema
  # -- Target CPU utilization percentage
  targetCPUUtilizationPercentage: 80

# @schema
# type: object
# additionalProperties: true
# @schema
# -- Deployment strategy.
deploymentStrategy: {}

# @schema
# type: array
# @schema
# -- Additional environment variables.
env: []

# @schema
# type: array
# @schema
# -- Additional volumes.
volumes: []

# @schema
# type: array
# @schema
# -- Additional volume mounts.
volumeMounts: []

# @schema
# type: object
# @schema
# -- Node selector configuration.
nodeSelector: {}

# @schema
# type: array
# @schema
# -- Tolerations configuration.
tolerations: []

# @schema
# type: object
# @schema
# -- Affinity configuration.
affinity: {}
